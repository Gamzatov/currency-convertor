{"version":3,"sources":["components/CurrencyConverter/CurrencyConverter.module.css","components/CurrencyRow/CurrencyRow.module.css","redux/exchangeRates/exchangeRatesOperations.js","utils/apiServices.js","redux/exchangeRates/exchangeRatesSelectors.js","redux/requestCounter/requestCounterSelectors.js","redux/requestCounter/requestCounterActions.js","components/ExchangeTable/ExchangeTable.js","components/CurrencyRow/CurrencyRow.js","utils/sprite.svg","utils/calcExchRate.js","components/CurrencyConverter/CurrencyConverter.js","components/Header/Header.js","components/App.js","redux/requestCounter/requestCounterReducer.js","redux/exchangeRates/exchangeRatesReducer.js","redux/store.js","index.js","components/ExchangeTable/ExchangeTable.module.css","components/Header/Header.module.css"],"names":["module","exports","getExchRates","createAsyncThunk","_","rejectWithValue","fetch","headers","then","res","console","log","json","catch","err","Promise","reject","Error","ratesGet","Array","isArray","message","getExchangeRates","state","exchangeRates","exchRates","getIsLoading","isLoading","getRequestCounter","requestCounter","increaseRequestCounter","createAction","ExchangeTable","useSelector","className","s","table","thead","thText","map","ccy","base_ccy","buy","sale","tdText","Math","round","CurrencyRow","selectedCurrency","onChangeCurrency","amount","onChangeAmount","currencyList","Set","type","input","value","onChange","select","calcExchRate","fromCurrency","toCurrency","toUSD","find","obj","toBTC","getCrossRateUahBtc","getCrossRateBtcUah","toUAH","uahToCur","getCrossRate","toCur","getCrossRateBtcToEurOrRuR","getCrossRateEurOrRuRtoBtc","CurrencyConverter","useState","setFromCurrency","setToCurrency","exchRate","setExchRate","fromAmount","setFromAmount","toAmount","setToAmount","useEffect","converter","e","target","btn","onClick","temp","icon","href","sprite","Header","header","flexContainer","logo","text","date","Date","toLocaleDateString","App","dispatch","useDispatch","length","reqCounterReducer","createReducer","actions","payload","requestCounterReducer","combineReducers","exchRatesReducer","fulfilled","isLoadingReducer","pending","rejected","errorReducer","exchangeRatesReducers","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfigRequestCounter","key","storage","whitelist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.953d37d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"converter\":\"CurrencyConverter_converter__1Gk6j\",\"btn\":\"CurrencyConverter_btn__bFzyq\",\"icon\":\"CurrencyConverter_icon__Fyf76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"CurrencyRow_input__3Xyvm\",\"select\":\"CurrencyRow_select__TF62b\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { apiGetRates } from '../../utils/apiServices';\n\nexport const getExchRates = createAsyncThunk(\n  'exchRates/getExchRates',\n  async (_, { rejectWithValue }) => {\n    try {\n      const ratesGet = await apiGetRates();\n      return Array.isArray(ratesGet) ? ratesGet : [];\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n","const URL =\n  'https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5/';\n\nexport const apiGetRates = () => {\n  return fetch(`${URL}`, {\n    headers: {\n      'Access-Control-Allow-Origin':'http://localhost:3000',\n      // 'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/json'\n  },\n  }).then(res => {\n      console.log(res);\n      return res.json();\n  })\n  .catch((err => {\n    return Promise.reject(new Error('No exchange rates found'));\n  }))\n};\n","export const getExchangeRates = state => state.exchangeRates.exchRates;\nexport const getIsLoading = state => state.exchangeRates.isLoading;\nexport const getError = state => state.exchangeRates.error;\n","export const getRequestCounter = (state) => state.requestCounter.requestCounter;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const increaseRequestCounter = createAction(\"requestCounter/increase\");\n","import { useSelector } from 'react-redux';\nimport {\n  getExchangeRates,\n  getIsLoading,\n} from '../../redux/exchangeRates/exchangeRatesSelectors';\n\nimport s from './ExchangeTable.module.css';\n\nconst ExchangeTable = () => {\n  const exchangeRates = useSelector(getExchangeRates);\n  const isLoading = useSelector(getIsLoading);\n\n  return (\n    <div className=\"container\">\n      {isLoading ? (\n        <h3 className=\"message\">Loading... </h3>\n      ) : (\n        <>\n          <table className={s.table}>\n            <thead>\n              <tr className={s.thead}>\n                <th className={s.thText}>Exchange rates</th>\n                <th className={s.thText}>Buy</th>\n                <th className={s.thText}>Sell</th>\n              </tr>\n            </thead>\n            <tbody>\n              {exchangeRates.map(({ ccy, base_ccy, buy, sale }) => (\n                <tr key={ccy}>\n                  <td className={s.tdText}>\n                    {ccy} / {base_ccy}\n                  </td>\n                  <td className={s.tdText}>{Math.round(buy * 100) / 100}</td>\n                  <td className={s.tdText}>{Math.round(sale * 100) / 100}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ExchangeTable;\n","import { useSelector } from 'react-redux';\nimport { getExchangeRates } from '../../redux/exchangeRates/exchangeRatesSelectors';\n\nimport s from './CurrencyRow.module.css';\n\nconst CurrencyRow = ({\n  selectedCurrency,\n  onChangeCurrency,\n  amount,\n  onChangeAmount,\n}) => {\n  const exchangeRates = useSelector(getExchangeRates);\n\n  const currencyList = [\n    ...new Set([\n      ...exchangeRates.map(({ ccy }) => ccy),\n      ...exchangeRates.map(({ base_ccy }) => base_ccy),\n    ]),\n  ];\n\n  return (\n    <div>\n      <input\n        type=\"number\"\n        className={s.input}\n        value={amount}\n        onChange={onChangeAmount}\n      />\n      <select\n        value={selectedCurrency}\n        onChange={onChangeCurrency}\n        className={s.select}\n      >\n        {currencyList.map(ccy => (\n          <option key={ccy} value={ccy}>\n            {ccy}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default CurrencyRow;\n","export default __webpack_public_path__ + \"static/media/sprite.61e7aa6e.svg\";","export default function calcExchRate({\n  exchangeRates,\n  fromCurrency,\n  toCurrency,\n}) {\n  if (fromCurrency === toCurrency) {\n    return 1;\n  }\n  if (fromCurrency === 'UAH' && toCurrency === 'BTC') {\n    return getCrossRateUahBtc({ exchangeRates });\n  }\n  if (\n    (fromCurrency === 'EUR' || fromCurrency === 'RUR') &&\n    toCurrency === 'BTC'\n  ) {\n    return getCrossRateEurOrRuRtoBtc({ exchangeRates, fromCurrency });\n  }\n  if (fromCurrency === 'BTC' && toCurrency === 'UAH') {\n    return getCrossRateBtcUah({ exchangeRates });\n  }\n  if (\n    fromCurrency === 'BTC' &&\n    (toCurrency === 'EUR' || toCurrency === 'RUR')\n  ) {\n    return getCrossRateBtcToEurOrRuR({ exchangeRates, toCurrency });\n  }\n\n  if (\n    fromCurrency !== 'UAH' &&\n    toCurrency !== 'UAH' &&\n    fromCurrency !== 'BTC' &&\n    toCurrency !== 'BTC'\n  ) {\n    return getCrossRate({ exchangeRates, fromCurrency, toCurrency });\n  }\n\n  if (\n    exchangeRates.find(\n      obj => fromCurrency === obj.ccy && toCurrency === obj.base_ccy,\n    )\n  ) {\n    return exchangeRates.find(\n      obj => fromCurrency === obj.ccy && toCurrency === obj.base_ccy,\n    ).buy;\n  }\n\n  if (\n    exchangeRates.find(\n      obj => fromCurrency === obj.base_ccy && toCurrency === obj.ccy,\n    )\n  ) {\n    return (\n      1 /\n      exchangeRates.find(\n        obj => fromCurrency === obj.base_ccy && toCurrency === obj.ccy,\n      ).sale\n    );\n  }\n}\n\nfunction getCrossRate({ exchangeRates, fromCurrency, toCurrency }) {\n  const toUAH = exchangeRates.find(obj => fromCurrency === obj.ccy).buy;\n  const uahToCur = exchangeRates.find(obj => toCurrency === obj.ccy).sale;\n  return toUAH / uahToCur;\n}\nfunction getCrossRateUahBtc({ exchangeRates }) {\n  const toUSD = exchangeRates.find(obj => obj.ccy === 'USD').sale;\n  const toBTC = exchangeRates.find(obj => obj.ccy === 'BTC').sale;\n  return 1 / toUSD / toBTC;\n}\nfunction getCrossRateEurOrRuRtoBtc({ exchangeRates, fromCurrency }) {\n  const toUAH = exchangeRates.find(obj => fromCurrency === obj.ccy).buy;\n  const toUSD = exchangeRates.find(obj => obj.ccy === 'USD').sale;\n  const toBTC = exchangeRates.find(obj => obj.ccy === 'BTC').sale;\n  return toUAH / toUSD / toBTC;\n}\nfunction getCrossRateBtcUah({ exchangeRates }) {\n  const toUSD = exchangeRates.find(obj => obj.ccy === 'BTC').buy;\n  const toUAH = exchangeRates.find(obj => obj.ccy === 'USD').buy;\n  return 1 * toUSD * toUAH;\n}\n\nfunction getCrossRateBtcToEurOrRuR({ exchangeRates, toCurrency }) {\n  const toUAH = getCrossRateBtcUah();\n  const toCur = exchangeRates.find(obj => toCurrency === obj.ccy).sale;\n  return toUAH / toCur;\n}\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getExchangeRates } from '../../redux/exchangeRates/exchangeRatesSelectors';\nimport CurrencyRow from '../CurrencyRow/CurrencyRow';\nimport sprite from '../../utils/sprite.svg';\nimport s from './CurrencyConverter.module.css';\nimport calcExchRate from '../../utils/calcExchRate';\n\nconst CurrencyConverter = () => {\n  const exchangeRates = useSelector(getExchangeRates);\n  const [fromCurrency, setFromCurrency] = useState(exchangeRates[0].ccy);\n  const [toCurrency, setToCurrency] = useState(exchangeRates[0].base_ccy);\n  const [exchRate, setExchRate] = useState(exchangeRates[0].buy);\n  const [fromAmount, setFromAmount] = useState(1000);\n  const [toAmount, setToAmount] = useState(1000 * exchRate);\n\n  useEffect(() => {\n    setExchRate(\n      calcExchRate({\n        exchangeRates: exchangeRates,\n        fromCurrency: fromCurrency,\n        toCurrency: toCurrency,\n      }),\n    );\n  }, [fromCurrency, toCurrency]); /* eslint-disable-line*/\n\n  useEffect(() => {\n    setToAmount(Math.round(fromAmount * exchRate * 100) / 100);\n  }, [exchRate]); /* eslint-disable-line*/\n\n  function onClickReverse() {\n    const temp = fromCurrency;\n    setFromCurrency(toCurrency);\n    setToCurrency(temp);\n  }\n\n  function handleChangeFromAmount(e) {\n    setFromAmount(Math.round(e.target.value * 100) / 100);\n    setToAmount(Math.round(e.target.value * exchRate * 100) / 100);\n  }\n\n  function handleChangeToAmount(e) {\n    setToAmount(Math.round(e.target.value * 100) / 100);\n    setFromAmount(Math.round((e.target.value / exchRate) * 100) / 100);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className={s.converter}>\n        <CurrencyRow\n          selectedCurrency={fromCurrency}\n          onChangeCurrency={e => setFromCurrency(e.target.value)}\n          amount={fromAmount}\n          onChangeAmount={handleChangeFromAmount}\n        />\n        <button className={s.btn} type=\"button\" onClick={onClickReverse}>\n          <svg className={s.icon}>\n            <use href={sprite + '#icontransfer'} />\n          </svg>\n        </button>\n        <CurrencyRow\n          selectedCurrency={toCurrency}\n          onChangeCurrency={e => setToCurrency(e.target.value)}\n          amount={toAmount}\n          onChangeAmount={handleChangeToAmount}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CurrencyConverter;\n","import s from './Header.module.css';\n\nconst Header = () => {\n  return (\n    <header className={s.header}>\n      <div className=\"container\">\n        <div className={s.flexContainer}>\n          <div className={s.logo}>\n            <p className={s.text}>Currency</p>\n            <p className={s.text}>Exchange</p>\n          </div>\n          <p className={s.date}>{new Date().toLocaleDateString()}</p>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getExchRates } from '../redux/exchangeRates/exchangeRatesOperations';\nimport { getExchangeRates } from '../redux/exchangeRates/exchangeRatesSelectors';\nimport { getRequestCounter } from '../redux/requestCounter/requestCounterSelectors';\nimport { increaseRequestCounter } from '../redux/requestCounter/requestCounterActions';\n\nimport ExchangeTable from './ExchangeTable/ExchangeTable';\nimport CurrencyConverter from './CurrencyConverter/CurrencyConverter';\nimport Header from './Header/Header';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const exchangeRates = useSelector(getExchangeRates);\n  const requestCounter = useSelector(getRequestCounter);\n\n  useEffect(() => {\n    if (exchangeRates.length > 0) {\n      return;\n    }\n    dispatch(getExchRates());\n    dispatch(increaseRequestCounter());\n  }, [dispatch]); /* eslint-disable-line*/\n\n  return (\n    <>\n      <Header />\n      {requestCounter === 5 && (\n        <div className=\"container\">\n          <div className=\"body\">\n            <h4 className=\"message\">\n              You have exceeded the allowed number of requests, try using the\n              service a little later\n            </h4>\n          </div>\n        </div>\n      )}\n      {exchangeRates.length > 0 && requestCounter < 5 && (\n        <div className=\"body\">\n          <ExchangeTable /> <CurrencyConverter />\n        </div>\n      )}\n    </>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport * as actions from './requestCounterActions';\n\nconst reqCounterReducer = createReducer(0, {\n  [actions.increaseRequestCounter]: (state, { payload }) =>\n    state === 5 ? 1 : (state += 1),\n});\n\nexport const requestCounterReducer = combineReducers({\n  requestCounter: reqCounterReducer,\n});\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { getExchRates } from \"./exchangeRatesOperations\";\n\nconst exchRatesReducer = createReducer([], {\n  [getExchRates.fulfilled]: (_, { payload }) => payload,\n});\n\nconst isLoadingReducer = createReducer(false, {\n  [getExchRates.pending]: () => true,\n  [getExchRates.fulfilled]: () => false,\n  [getExchRates.rejected]: () => false,\n});\n\nconst setError = (_, { payload }) => payload;\nconst resetError = () => null;\n\nconst errorReducer = createReducer(null, {\n  [getExchRates.pending]: resetError,\n  [getExchRates.rejected]: setError,\n});\n\nconst exchangeRatesReducers = combineReducers({\n  exchRates: exchRatesReducer,\n  isLoading: isLoadingReducer,\n  error: errorReducer,\n});\n\nexport default exchangeRatesReducers;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport { requestCounterReducer } from \"./requestCounter/requestCounterReducer\";\nimport exchangeRatesReducers from \"./exchangeRates/exchangeRatesReducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst persistConfigRequestCounter = {\n  key: \"requestCounter\",\n  storage,\n  whitelist: [\"requestCounter\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    exchangeRates: exchangeRatesReducers,\n    requestCounter: persistReducer(\n      persistConfigRequestCounter,\n      requestCounterReducer\n    ),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport { store, persistor } from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"ExchangeTable_table__3mQ8G\",\"thText\":\"ExchangeTable_thText__3rOAH\",\"tdText\":\"ExchangeTable_tdText__1V2rb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2moNc\",\"flexContainer\":\"Header_flexContainer__1jlVl\",\"logo\":\"Header_logo__1JxHs\",\"text\":\"Header_text__1iK75\",\"icon\":\"Header_icon__GYeIl\",\"date\":\"Header_date__2nlPc\"};"],"sourceRoot":""}